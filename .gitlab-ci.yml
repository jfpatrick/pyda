
# Use the acc-py-devtools templates found at
# https://gitlab.cern.ch/-/ide/project/acc-co/devops/python/acc-py-devtools/blob/master/-/acc_py_devtools/templates/gitlab-ci/python.yml.
include:
 - project: acc-co/devops/python/acc-py-devtools
   file: acc_py_devtools/templates/gitlab-ci/python.yml

variables:
  project_name: pyda
  PY_VERSION: '3.7'

  ACCSOFT_DS_MODEL_REPO:
    value: "acc-co/devops/python/prototypes/accsoft-ds-model-py"
    description: "The repo project name for pyds-model"

  ACCSOFT_DS_MODEL_REF:
    value: "master"
    description: "The ref to use from $ACCSOFT_DS_MODEL_REPO to test against."


# Pull pyds_model wheel and install before running any dependent jobs
.external_deps:
  variables:
    PIP_FIND_LINKS: ./wheelhouse/
  before_script:
    # Find the suitable wheel provided in the wheelhouse directory, and put it in a ./wheel-to-install directory.
    - python -m pip wheel --no-deps --no-index --find-links ./wheelhouse --wheel-dir ./wheels-to-install
        pyds-model
  needs:
    - project: "${ACCSOFT_DS_MODEL_REPO}"
      job: build_wheel
      ref: "${ACCSOFT_DS_MODEL_REF}"
      artifacts: true


build_wheel:
  extends: .acc_py_build_wheel


# A development installation of pyda tested with pytest.
test_dev:
  extends:
    - .external_deps
    - .acc_py_dev_test
  before_script:
    # Extract the external dependencies wheels into a ./wheels-to-install directory.
    - !reference [.external_deps, before_script]
    # Install the wheel that was found (and all dependencies via the package index),
    # this project (with test dependencies) and coverage functionality.
    # Doing this as a single install command will ensure that if the project pins
    # versions which are incompatible with the upstream versions, the command will fail.
    - python -m pip install
        ./wheels-to-install/*.whl
        -e .[test]
        pytest-cov

test_wheel:
  extends:
    - .external_deps
    - .acc_py_wheel_test
  needs:
    - !reference [.external_deps, needs]
    - build_wheel
  before_script:
    # Extract the external dependencies wheels into a ./wheels-to-install directory.
    - !reference [.external_deps, before_script]
    # Extract the wheel of *this* package which we need to install.
    - python -m pip wheel --no-deps --no-index --find-links ./wheelhouse --wheel-dir ./wheel-to-install
          ${project_name}
    - python -m pip install
        ./wheels-to-install/*.whl
        $(ls -A ./wheel-to-install/*.whl)[test]



# A push of the source distribution to the acc-py PyPI, only on git tag.
release_sdist_on_tag:
  extends: .acc_py_release_sdist


release_wheel:
  extends: .acc_py_release_wheel


# A dev build of the documentation, made available through cern.ch/acc-py.
build_docs:
  extends:
    - .external_deps
    - .acc_py_build_docs


# A release build of the documentation, made available through cern.ch/acc-py.
build_docs_on_tag:
  extends: .acc_py_build_docs_on_tag


pre-commit:
  extends: .acc_py_pre-commit
